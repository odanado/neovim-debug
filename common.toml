[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#enable_smart_case = 1
let g:deoplete#omni_input_patterns = {}
let g:deoplete#omni_input_patterns.c = 
            \ '[^.[:digit:] *\t]\%(\.\|->\)\w*'
let g:deoplete#omni_input_patterns.cpp = 
            \ '[^.[:digit:] *\t]\%(\.\|->\)\w*\|\h\w*::\w*'
let g:deoplete#omni_input_patterns.python = 
            \ '\%([^. \t]\.\|^\s*@\|^\s*from\s.\+import \|^\s*from \|^\s*import \)\w*'
" For perlomni.vim setting.
" https://github.com/c9s/perlomni.vim
let g:deoplete#omni_input_patterns.perl = '\h\w*->\h\w*\|\h\w*::'
'''

[[plugins]]
repo = 'Shougo/neosnippet'
hook_add = '''
" Plugin key-mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
            \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
" For conceal markers.
if has('conceal')
    set conceallevel=2 concealcursor=niv
endif
let g:neosnippet#snippets_directory='~/.config/nvim/snippets'
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
depends = 'Shougo/neosnippet'

